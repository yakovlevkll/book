import{_ as n,o as s,c as a,a as e}from"./app.edcee6da.js";const t={},p=e(`<h1 id="advanced-structures" tabindex="-1"><a class="header-anchor" href="#advanced-structures" aria-hidden="true">#</a> Advanced structures</h1><h2 id="lists" tabindex="-1"><a class="header-anchor" href="#lists" aria-hidden="true">#</a> Lists</h2><p>A list is like an apartment house. Each room has it&#39;s own number (index) and contains some data - maybe amount of people in it, maybe something else.</p><p>Another way is to think about it like a box with boxes. Outside box is a list itself, inner boxes are values (almost like variables), each of them stores some information. We can access this information using name of the list and index of a inner box.</p><p>When can it be helpful? One of the common situations is when we need to store some similar pieces of data - maybe list with names, or phone numbers, or maybe coordinates or else.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>grocery <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Juice&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Tomatoes&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Potatoes&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Bananas&#39;</span><span class="token punctuation">]</span>
item <span class="token operator">=</span> grocery<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>  <span class="token comment"># &gt;&gt;&gt; &#39;Juice&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>In other programming languages lists are often named as <em>array</em>.</p><p>We can change the value stored in a list (thing that we can&#39;t do with strings)</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>grocery<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;Green Juice&quot;</span>
<span class="token comment"># &gt;&gt;&gt; [&#39;Green Juice&#39;, &#39;Tomatoes&#39;, &#39;Potatoes&#39;, &#39;Bananas&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>As with strings, we can get a subset of the list with <code>[start_index:end_index]</code> but not including value on <code>end_index</code>.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>grocery<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span>  <span class="token comment"># &gt;&gt;&gt; [&#39;Tomatoes&#39;, &#39;Potatoes&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>We can put any data type in a a list including another lists. As a result we will have multi-dimensional lists</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>events <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Wash Car&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Pick up Kids&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Cash Check&#39;</span><span class="token punctuation">]</span>
to_do <span class="token operator">=</span> <span class="token punctuation">[</span>events<span class="token punctuation">,</span> grocery<span class="token punctuation">]</span>
<span class="token comment"># &gt;&gt;&gt;</span>

to_do<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
<span class="token comment"># &gt;&gt;&gt; (first item in the second sublist)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="block nb"><div class="title">\u0412\u0430\u0436\u043D\u043E</div><p>The good practice is not to store different types of data in one list. Use <code>dict</code> instead (you can read about it in corresponding chapter).</p></div><h3 id="basic-operations" tabindex="-1"><a class="header-anchor" href="#basic-operations" aria-hidden="true">#</a> Basic operations</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>new_list <span class="token operator">=</span> events <span class="token operator">+</span> grocery  <span class="token comment"># merge  lists</span>
<span class="token comment"># &gt;&gt;&gt;</span>

grocery<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">&#39;onions&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># &gt;&gt;&gt;</span>

grocery<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;Pickle&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># &gt;&gt;&gt;</span>

grocery<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># &gt;&gt;&gt;</span>

grocery<span class="token punctuation">.</span>reverse<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># &gt;&gt;&gt;</span>

grocery<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">&quot;Pickle&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># &gt;&gt;&gt;</span>

<span class="token keyword">del</span> grocery<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>
<span class="token comment"># &gt;&gt;&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Another very useful block of operations</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>values <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>

<span class="token builtin">len</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span>  <span class="token comment"># &gt;&gt;&gt; 4 (amount of values in list)</span>
<span class="token builtin">min</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span>  <span class="token comment"># &gt;&gt;&gt; -2 (minimum value in list)</span>
<span class="token builtin">max</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span>  <span class="token comment"># &gt;&gt;&gt; 3 (maximum value in list)</span>
<span class="token builtin">sum</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span>  <span class="token comment"># &gt;&gt;&gt; 2 (sum of all value in list)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="range" tabindex="-1"><a class="header-anchor" href="#range" aria-hidden="true">#</a> Range</h3><p>There is handsome <code>range</code> operation to generate lists with numbers in Python</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>  <span class="token comment"># &gt;&gt;&gt; range(4)</span>
<span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># &gt;&gt;&gt; [5, 6, 7, 8]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>It can even more, read the docs.</p><h2 id="tuples" tabindex="-1"><a class="header-anchor" href="#tuples" aria-hidden="true">#</a> Tuples</h2><p>Values in a tuple can&#39;t be changed like values in a list</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>pi_tuple <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Operations as <code>len</code>, <code>max</code>, <code>min</code> and <code>sum</code> also available with tuples.</p><h2 id="sets" tabindex="-1"><a class="header-anchor" href="#sets" aria-hidden="true">#</a> Sets</h2><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span>
<span class="token builtin">set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>  <span class="token comment"># &gt;&gt;&gt; (1, 2, 3, 4)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="converting" tabindex="-1"><a class="header-anchor" href="#converting" aria-hidden="true">#</a> Converting</h2><p>We can use <code>list</code>, <code>tuple</code> and <code>set</code> commands to convert from one array type to another</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>new_tuple <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>pi_tuple<span class="token punctuation">)</span>
new_list <span class="token operator">=</span> <span class="token builtin">tuple</span><span class="token punctuation">(</span>grocery<span class="token punctuation">)</span>
new_set <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span>pi_tuple<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If we try to convert string into list</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># &gt;&gt;&gt; [&#39;H&#39;, &#39;e&#39;, &#39;l&#39;, ....]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="matrices" tabindex="-1"><a class="header-anchor" href="#matrices" aria-hidden="true">#</a> Matrices</h2><p><em>Note. It is recommended to study Cycles chapter first.</em></p><p>One specific application of lists and tuples is mathematical matrices. We can obtain multi-dimensional structures.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>cols <span class="token operator">=</span> <span class="token number">8</span>
rows <span class="token operator">=</span> <span class="token number">5</span>

M <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>cols<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>rows<span class="token punctuation">)</span><span class="token punctuation">]</span>  <span class="token comment"># create zero matrix</span>

<span class="token comment"># M[6][0] = 3  # &gt;&gt;&gt; ERROR - out of range</span>
M<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">3</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>M<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># &gt;&gt;&gt; 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Or with short syntax</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>M <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> cols <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>rows<span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>You can use <code>numpy</code>, <code>pandas</code> or any similar package to work with matrices and other math stuff in Python.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> numpy

numpy<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">&#39;&#39;&#39;array([[ 0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.]])&#39;&#39;&#39;</span>
numpy<span class="token punctuation">.</span>matrix<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">&#39;&#39;&#39;matrix([[1, 2],
        [3, 4]])&#39;&#39;&#39;</span>

numpy<span class="token punctuation">.</span>matrix<span class="token punctuation">(</span><span class="token string">&#39;1 2; 3 4&#39;</span><span class="token punctuation">)</span>
numpy<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
numpy<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
numpy<span class="token punctuation">.</span>ndarray<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,41),o=[p];function c(i,l){return s(),a("div",null,o)}var r=n(t,[["render",c],["__file","index.html.vue"]]);export{r as default};
