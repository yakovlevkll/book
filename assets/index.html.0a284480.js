import{_ as n,o as s,c as a,a as e}from"./app.edcee6da.js";const t={},o=e(`<h1 id="numbers" tabindex="-1"><a class="header-anchor" href="#numbers" aria-hidden="true">#</a> Numbers</h1><h2 id="basic-operations" tabindex="-1"><a class="header-anchor" href="#basic-operations" aria-hidden="true">#</a> Basic operations</h2><p>Order of operations is similar to mathematical <strong>BODMAS</strong></p><ul><li><strong>B</strong>rackets</li><li><strong>O</strong>rders (exponents)</li><li><strong>D</strong>ivision</li><li><strong>M</strong>ultiplication</li><li><strong>A</strong>ddition</li><li><strong>S</strong>ubtraction</li></ul><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>num <span class="token operator">=</span> <span class="token number">9</span>

add_res <span class="token operator">=</span> num <span class="token operator">+</span> <span class="token number">2</span>  <span class="token comment"># &gt;&gt;&gt; 11</span>
subtr_res_ <span class="token operator">=</span> num <span class="token operator">-</span> <span class="token number">2</span>  <span class="token comment"># &gt;&gt;&gt; 7</span>
mult_res_ <span class="token operator">=</span> num <span class="token operator">*</span> <span class="token number">2</span>  <span class="token comment"># &gt;&gt;&gt; 18</span>
div_res_ <span class="token operator">=</span> num <span class="token operator">/</span> <span class="token number">2</span>  <span class="token comment"># &gt;&gt;&gt; 4.5</span>
exp_res_ <span class="token operator">=</span> num <span class="token operator">**</span> <span class="token number">2</span>  <span class="token comment"># &gt;&gt;&gt; 81</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Other useful operations</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>num <span class="token operator">=</span> <span class="token number">15</span>

modulo_res <span class="token operator">=</span> num <span class="token operator">%</span> <span class="token number">4</span>  <span class="token comment"># &gt;&gt;&gt; 3 (remainder after division)</span>
floor_div_res <span class="token operator">=</span> num <span class="token operator">//</span> <span class="token number">2</span>  <span class="token comment"># &gt;&gt;&gt; 7 (whole part after division)</span>
negative_num <span class="token operator">=</span> <span class="token operator">-</span>num  <span class="token comment"># &gt;&gt;&gt; -15</span>
abs_value <span class="token operator">=</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>negative_num<span class="token punctuation">)</span>  <span class="token comment">#  &gt;&gt;&gt; 15 (absolute value)</span>
rounded_val <span class="token operator">=</span> <span class="token builtin">round</span><span class="token punctuation">(</span><span class="token number">9.12356</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>  <span class="token comment">#  &gt;&gt;&gt; 9.124 (3 is a number of digits after point)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>We can change the value of variable and assign the result to the same variable like this</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>num <span class="token operator">=</span> <span class="token number">8</span>
num <span class="token operator">=</span> num <span class="token operator">+</span> <span class="token number">3</span>  <span class="token comment"># num = 8 + 3 = 11</span>
num <span class="token operator">=</span> num <span class="token operator">**</span> <span class="token number">2</span>  <span class="token comment"># num = 11 ** 2 = 121</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Same with other operations. Or we can use short syntax</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>num <span class="token operator">+=</span> <span class="token number">3</span>  <span class="token comment"># means num = num + 3</span>
num <span class="token operator">-=</span> <span class="token number">5</span>
num <span class="token operator">*=</span> <span class="token number">3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>and so on.</p><h2 id="import" tabindex="-1"><a class="header-anchor" href="#import" aria-hidden="true">#</a> Import</h2><p>One of the main powers of Python belongs to its packages, that can be downloaded using terminal (console) and <code>pip</code> command</p><p>For Windows users</p><div class="language-cmd ext-cmd line-numbers-mode"><pre class="language-cmd"><code>pip install %package_name%
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>For Linux users</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> pip3 <span class="token function">install</span> %package_name%
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Feel free to search packages in your favorite search engine.</p><p>Then you can easily add packages to your files</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> math  <span class="token comment"># additional math functions</span>

sqrt_res <span class="token operator">=</span> math<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span>  <span class="token comment"># &gt;&gt;&gt; 8 (alternative is 8 ** 0.5)</span>

radius <span class="token operator">=</span> <span class="token number">5</span>
circle_area <span class="token operator">=</span> math<span class="token punctuation">.</span>pi <span class="token operator">*</span> radius <span class="token operator">**</span> <span class="token number">2</span>  <span class="token comment"># math.pi = 3.14....</span>

floored_val <span class="token operator">=</span> math<span class="token punctuation">.</span>floor<span class="token punctuation">(</span><span class="token number">7.321</span><span class="token punctuation">)</span>  <span class="token comment"># &gt;&gt;&gt; 7 (alternative is 7.321 // 1)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>As you can see, we use modules as <code>%module_name%.%method_name%</code></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> random  <span class="token comment"># generating random numbers etc.</span>

<span class="token comment"># Generate random number between 0 and 10</span>
random_num <span class="token operator">=</span> random<span class="token punctuation">.</span>Random<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>randrange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Other useful functions (not all) from math package</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>math<span class="token punctuation">.</span>e  <span class="token comment"># &gt;&gt;&gt; 2.71....</span>
math<span class="token punctuation">.</span>exp<span class="token punctuation">(</span>num<span class="token punctuation">)</span>  <span class="token comment"># means math.e ** num</span>
math<span class="token punctuation">.</span>log<span class="token punctuation">(</span>num<span class="token punctuation">,</span> base<span class="token punctuation">)</span>  <span class="token comment"># if base is not defined, base will be equal to e</span>
math<span class="token punctuation">.</span>factorial<span class="token punctuation">(</span>num<span class="token punctuation">)</span>  <span class="token comment"># num! = 1 * 2 * 3 ... * num</span>
math<span class="token punctuation">.</span>degrees<span class="token punctuation">(</span>num<span class="token punctuation">)</span>  <span class="token comment"># converts radians to degrees</span>
math<span class="token punctuation">.</span>radians<span class="token punctuation">(</span>num<span class="token punctuation">)</span>  <span class="token comment"># converts degrees to radians</span>
math<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>num<span class="token punctuation">)</span>  <span class="token comment"># num must be in radians</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="limitations" tabindex="-1"><a class="header-anchor" href="#limitations" aria-hidden="true">#</a> Limitations</h2><p>There is some kind of limitations in programming languages. Computers handle numbers in binary code. So without using specific libraries you can get some &quot;weird&quot; results</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token number">0.2</span> <span class="token operator">+</span> <span class="token number">0.1</span>  <span class="token comment"># &gt;&gt;&gt; 0.30000000000000004</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>There is no worry about, your computer is OK. But in some situations it&#39;s better to remember such things.</p>`,29),p=[o];function i(l,c){return s(),a("div",null,p)}var u=n(t,[["render",i],["__file","index.html.vue"]]);export{u as default};
